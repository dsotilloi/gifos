{"version":3,"sources":["resources/images/search-icon.svg","resources/images/logoDarkMode.svg","resources/images/hero-img.svg","resources/images/logo.svg","resources/images/up-arrow.svg","context/DarkModeContext.jsx","context/AppContext.jsx","resources/fetch/getSearch.jsx","resources/fetch/getSuggestions.jsx","resources/fetch/getTrends.jsx","components/Search.jsx","components/Header.jsx","components/Card.jsx","components/Results.jsx","App.jsx","index.jsx"],"names":["module","exports","console","clear","DarkModeContext","createContext","AppProvider","children","useState","darkMode","setDarkMode","darkModeBackground","undefined","darkModeBtn","darkModeInput","darkModeDropdown","darkModeResults","Provider","value","AppContext","autocomplete","setAutocomplete","gifsArray","setGifsArray","isTrend","setIsTrend","loading","setLoading","searchButton","setSearchButton","searchInput","setSearchInput","tagsArray","setTagsArray","getSearch","a","fetch","request","json","response","data","warn","getSuggestions","getTrends","Search","useContext","useEffect","then","className","onChange","e","preventDefault","target","type","placeholder","map","tag","key","name","onClick","innerText","src","searchIcon","alt","Header","href","darkModeLogo","logo","heroImg","Card","imgSrc","Results","gif","id","images","original","url","length","upIcon","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.806138df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-icon.2000bd69.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoDarkMode.fb1b0349.svg\";","module.exports = __webpack_public_path__ + \"static/media/hero-img.8aaf73f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.83a3e309.svg\";","module.exports = __webpack_public_path__ + \"static/media/up-arrow.76fdaf30.svg\";","import React, { useState, createContext } from \"react\";\r\n\r\nconsole.clear();\r\n\r\nexport const DarkModeContext = createContext();\r\n\r\nexport default function AppProvider({ children }) {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  //CSS class:\r\n  const darkModeBackground = darkMode ? \"darkMode\" : undefined;\r\n  const darkModeBtn = darkMode ? \"darkMode__btn\" : undefined;\r\n  const darkModeInput = darkMode ? \"darkMode__input\" : undefined;\r\n  const darkModeDropdown = darkMode ? \"darkMode__dropdown\" : undefined;\r\n  const darkModeResults = darkMode ? \"darkMode__results\" : undefined;\r\n\r\n  return (\r\n    <DarkModeContext.Provider\r\n      value={{\r\n        darkMode,\r\n        setDarkMode,\r\n        darkModeBackground,\r\n        darkModeBtn,\r\n        darkModeDropdown,\r\n        darkModeInput,\r\n        darkModeResults\r\n      }}\r\n    >\r\n      {children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nconsole.clear();\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport default function AppProvider({ children }) {\r\n  const [autocomplete, setAutocomplete] = useState(true);\r\n  const [gifsArray, setGifsArray] = useState([]);\r\n  const [isTrend, setIsTrend] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchButton, setSearchButton] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [tagsArray, setTagsArray] = useState([]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autocomplete,\r\n        gifsArray,\r\n        isTrend,\r\n        loading,\r\n        searchButton,\r\n        searchInput,\r\n        setAutocomplete,\r\n        setGifsArray,\r\n        setIsTrend,\r\n        setLoading,\r\n        setSearchButton,\r\n        setSearchInput,\r\n        setTagsArray,\r\n        tagsArray\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","export const getSearch = async (searchInput) => {\r\n  try {\r\n    const request = await fetch(\r\n      `https://api.giphy.com/v1/gifs/search?api_key=yGhwzJF6h4j3zJ8UcebnoEtaqCjAJrTJ&q=${searchInput}&limit=15&offset=0&rating=g&lang=es`\r\n    );\r\n\r\n    const response = await request.json();\r\n    const { data } = await response;\r\n    return data;\r\n  } catch {\r\n    console.warn(\"Search error\");\r\n  }\r\n};\r\n","export const getSuggestions = async (searchInput) => {\r\n  try {\r\n    const request = await fetch(\r\n      `https://api.giphy.com/v1/gifs/search/tags?api_key=yGhwzJF6h4j3zJ8UcebnoEtaqCjAJrTJ&q=${searchInput}&limit=5&offset=0&lang=es`\r\n    );\r\n\r\n    const response = await request.json();\r\n    const { data } = response;\r\n    return data;\r\n  } catch {\r\n    console.warn(\"Suggestions error\");\r\n  }\r\n};\r\n","export const getTrends = async () => {\r\n  try {\r\n    const request = await fetch(\r\n      `https://api.giphy.com/v1/gifs/trending?api_key=yGhwzJF6h4j3zJ8UcebnoEtaqCjAJrTJ&limit=15&rating=g`\r\n    );\r\n\r\n    const response = await request.json();\r\n    const { data } = response;\r\n    return data;\r\n  } catch {\r\n    console.warn(\"Trending error\");\r\n  }\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { DarkModeContext } from \"../context/DarkModeContext\";\r\nimport { getSearch } from \"../resources/fetch/getSearch\";\r\nimport { getSuggestions } from \"../resources/fetch/getSuggestions\";\r\nimport { getTrends } from \"../resources/fetch/getTrends\";\r\nimport searchIcon from \"../resources/images/search-icon.svg\";\r\nimport \"../css/styles.css\";\r\nimport \"../css/darkMode.css\";\r\nimport \"../css/responsive.css\";\r\n\r\nconsole.clear();\r\n\r\nexport default function Search() {\r\n  //Contexts:\r\n  const {\r\n    autocomplete,\r\n    searchButton,\r\n    searchInput,\r\n    setAutocomplete,\r\n    setGifsArray,\r\n    setIsTrend,\r\n    setLoading,\r\n    setSearchButton,\r\n    setSearchInput,\r\n    setTagsArray,\r\n    tagsArray\r\n  } = useContext(AppContext);\r\n  const { darkModeDropdown, darkModeInput } = useContext(DarkModeContext);\r\n\r\n  //API requests:\r\n  useEffect(() => {\r\n    searchInput === \"\" && getTrends(searchInput).then(setGifsArray);\r\n    autocomplete && getSuggestions(searchInput).then(setTagsArray);\r\n\r\n    if (searchButton) {\r\n      setLoading(true);\r\n      getSearch(searchInput).then(setGifsArray);\r\n      setSearchButton(!searchButton);\r\n      setLoading(false);\r\n      setIsTrend(false);\r\n    }\r\n  }, [\r\n    autocomplete,\r\n    searchButton,\r\n    searchInput,\r\n    setGifsArray,\r\n    setIsTrend,\r\n    setLoading,\r\n    setSearchButton,\r\n    setTagsArray\r\n  ]);\r\n\r\n  return (\r\n    <section className=\"search\">\r\n      <div className=\"search-position\">\r\n        <input\r\n          className={`search__input ${darkModeInput}`}\r\n          value={searchInput}\r\n          onChange={(e) => {\r\n            e.preventDefault();\r\n            setSearchInput(e.target.value);\r\n            setAutocomplete(true);\r\n          }}\r\n          type=\"text\"\r\n          placeholder=\"Buscar gifs\"\r\n        />\r\n\r\n        {searchInput !== \"\" && (\r\n          <ul className={`search__dropdown ${darkModeDropdown}`}>\r\n            {tagsArray.map((tag) => (\r\n              <li\r\n                key={tag.name}\r\n                onClick={(e) => {\r\n                  setSearchInput(e.target.innerText);\r\n                  setAutocomplete(false);\r\n                  setTagsArray([]);\r\n                }}\r\n              >\r\n                {tag.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        className=\"btn search__btn\"\r\n        value={searchButton}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          if (searchInput !== \"\") {\r\n            setSearchButton(!searchButton);\r\n            setAutocomplete(false);\r\n            setTagsArray([]);\r\n          }\r\n        }}\r\n      >\r\n        <img src={searchIcon} alt=\"search icon\" />\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport Search from \"./Search\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { DarkModeContext } from \"../context/DarkModeContext\";\r\nimport darkModeLogo from \"../resources/images/logoDarkMode.svg\";\r\nimport heroImg from \"../resources/images/hero-img.svg\";\r\nimport logo from \"../resources/images/logo.svg\";\r\nimport \"../css/styles.css\";\r\nimport \"../css/darkMode.css\";\r\nimport \"../css/responsive.css\";\r\n\r\nconsole.clear();\r\n\r\nexport default function Header() {\r\n  const { isTrend, setIsTrend, searchInput } = useContext(AppContext);\r\n  const { darkMode, setDarkMode, darkModeBtn } = useContext(DarkModeContext);\r\n\r\n  useEffect(() => {\r\n    if (searchInput === \"\") {\r\n      setIsTrend(true);\r\n    }\r\n  }, [searchInput, setIsTrend]);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__inicio\">\r\n        <a href=\"/\">\r\n          {darkMode ? (\r\n            <img src={darkModeLogo} alt=\"Gifos logo\" />\r\n          ) : (\r\n            <img src={logo} alt=\"Gifos logo\" />\r\n          )}\r\n        </a>\r\n\r\n        <button\r\n          className={`btn ${darkModeBtn}`}\r\n          onClick={() => setDarkMode(!darkMode)}\r\n        >\r\n          {darkMode ? \"Modo diurno\" : \"Modo nocturno\"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"header__hero\">\r\n        <h1 className=\"header__hero--h1\">\r\n          ¡Inspírate y busca los mejores GIFS!\r\n        </h1>\r\n        <img className=\"header__hero--img\" src={heroImg} alt=\"hero\" />\r\n      </div>\r\n\r\n      <Search key=\"search\" />\r\n\r\n      {isTrend ? (\r\n        <p className=\"header__p\">\r\n          O descubre tu favorito en nuestras tendencias:\r\n        </p>\r\n      ) : (\r\n        <p className=\"header__p\">Resultados de tu búsqueda:</p>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../css/styles.css\";\r\nimport \"../css/darkMode.css\";\r\nimport \"../css/responsive.css\";\r\n\r\nconsole.clear();\r\n\r\nexport default function Card({ imgSrc }) {\r\n  return (\r\n    <div className=\"card\">\r\n    <a href={imgSrc} target=\"_blanck\">\r\n      <img className=\"card__gif\" src={imgSrc} alt=\"gif\" />\r\n    </a>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { DarkModeContext } from \"../context/DarkModeContext\";\r\nimport upIcon from \"../resources/images/up-arrow.svg\";\r\nimport \"../css/styles.css\";\r\nimport \"../css/darkMode.css\";\r\nimport \"../css/responsive.css\";\r\n\r\nconsole.clear();\r\n\r\nexport default function Results() {\r\n  const { gifsArray, loading, searchInput } = useContext(AppContext);\r\n  const { darkModeResults } = useContext(DarkModeContext);\r\n\r\n  return (\r\n    <main className={`results ${darkModeResults}`}>\r\n      {loading && <p className=\"error-message\">Loading...</p>}\r\n\r\n      <div className=\"results__card-container\">\r\n        {gifsArray.map((gif) => (\r\n          <Card key={gif.id} imgSrc={gif.images.original.url} />\r\n        ))}\r\n      </div>\r\n\r\n      {searchInput !== \"\" && gifsArray.length === 0 && (\r\n        <p className=\"error-message\">\r\n          ¡Ups! No hay resultados, <span>¡sigue intentando!</span>\r\n        </p>\r\n      )}\r\n\r\n      <a href=\"#\">\r\n        <button className=\"btn results__btn\">\r\n          <img src={upIcon} alt=\"Go to Search\" />\r\n        </button>\r\n      </a>\r\n    </main>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\nimport Header from \"./components/Header\";\nimport Results from \"./components/Results\";\nimport { DarkModeContext } from \"./context/DarkModeContext\";\nimport \"./css/styles.css\";\nimport \"./css/darkMode.css\";\nimport \"./css/responsive.css\";\n\nconsole.clear();\n\nexport default function App() {\n  const { darkModeBackground } = useContext(DarkModeContext);\n\n  return (\n    <div className={`App ${darkModeBackground}`}>\n      <div className=\"principal-container\">\n        <Header key=\"header\" />\n        <Results key=\"results\" />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DarkModeProvider from \"./context/DarkModeContext\";\nimport AppProvider from \"./context/AppContext\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <DarkModeProvider>\n        <App />\n      </DarkModeProvider>\n    </AppProvider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}